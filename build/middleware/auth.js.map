{"version":3,"sources":["../../server/middleware/auth.js"],"names":["getUserId","req","res","next","token","get","decoded","jwt","decode","email","console","log","checkAuth","body","user","verified","verify","status","json","errors","global","err"],"mappings":";;;;;;;AAAA;;;;;;AAEO,IAAMA,gCAAY,SAAZA,SAAY,CAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACzC,MAAMC,QAAQH,IAAII,GAAJ,CAAQ,eAAR,CAAd;AACA,MAAMC,UAAUC,uBAAIC,MAAJ,CAAWJ,KAAX,CAAhB;AACAH,MAAIQ,KAAJ,GAAYH,QAAQG,KAApB;AACAC,UAAQC,GAAR,CAAY,mBAAZ,EAAiCV,IAAIQ,KAArC;AACAN;AACD,CANM;;AAQA,IAAMS,gCAAY,SAAZA,SAAY,CAACX,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,MACjCM,KADiC,GACvBR,IAAIY,IAAJ,CAASC,IADc,CACjCL,KADiC;;AAEzC,MAAML,QAAQH,IAAII,GAAJ,CAAQ,eAAR,CAAd;AACA,MAAGD,KAAH,EAAS;AACP,QAAI;AACF,UAAMW,WAAWR,uBAAIS,MAAJ,CAAWZ,KAAX,EAAkB,mBAAlB,CAAjB;AACA,UAAGK,UAAUM,SAASN,KAAtB,EAA6B;AAC3B,eAAOP,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,QAAQ,EAACC,QAAQ,sBAAT,EAAT,EAArB,CAAP;AACD,OAFD,MAEO;AACLnB,YAAIa,IAAJ,GAAWC,QAAX;AACAZ;AACD;AACF,KARD,CASA,OAAMkB,GAAN,EAAW;AACT,aAAOnB,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,QAAQ,EAACC,QAAQ,4BAAT,EAAT,EAArB,CAAP;AACD;AACF;AACF,CAjBM","file":"auth.js","sourcesContent":["import jwt from 'jsonwebtoken'\n\nexport const getUserId = (req,res,next) => {\n  const token = req.get('Authorization')\n  const decoded = jwt.decode(token)\n  req.email = decoded.email\n  console.log('Auth Middleware: ', req.email);\n  next()\n}\n\nexport const checkAuth = (req,res,next) => {\n  const { email } = req.body.user\n  const token = req.get('Authorization')\n  if(token){\n    try {\n      const verified = jwt.verify(token, 'valeCollectionJWT')\n      if(email !== verified.email) {\n        return res.status(401).json({errors: {global: 'Unauthorized request'}})\n      } else {\n        req.user = verified\n        next()\n      }\n    }\n    catch(err) {\n      return res.status(401).json({errors: {global: 'Auth failed: Invalid token'}})\n    }\n  }\n}\n"]}