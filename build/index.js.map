{"version":3,"sources":["../server/index.js"],"names":["app","use","bodyParser","urlencoded","extended","json","express","static","path","join","__dirname","userRouter","authRouter","get","req","res","console","log","headers","language","split","lan","match","mobile","process","env","NODE_ENV","sendFile","send","server","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;;AAEAA,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAACC,UAAU,IAAX,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEAL,IAAIC,GAAJ,CAAQ,SAAR,EAAmBK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CAAf,CAAnB;;AAEAV,IAAIC,GAAJ,CAAQ,MAAR,EAAgBK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAf,CAAhB;;AAEA;AACAV,IAAIC,GAAJ,CAAQ,OAAR,EAAiBU,cAAjB;AACAX,IAAIC,GAAJ,CAAQ,OAAR,EAAiBW,cAAjB;;AAEAZ,IAAIa,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAKC,GAAL,EAAa;AACxBC,UAAQC,GAAR,CAAYH,IAAII,OAAhB;AACA,MAAMC,WAAWL,IAAID,GAAJ,CAAQ,iBAAR,EAA2BO,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAjB;AACA,MAAMC,MAAMF,SAASG,KAAT,CAAe,OAAf,IAA0B,IAA1B,GAAiC,IAA7C;AACA,MAAMC,SAAST,IAAID,GAAJ,CAAQ,YAAR,EAAsBS,KAAtB,CAA6B,WAA7B,IAA6C,IAA7C,GAAoD,KAAnE;AACA;AACA,MAAGE,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA5B,EAA0C;AACxCX,QAAIY,QAAJ,CAAanB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,4BAArB,CAAb;AACD,GAFD,MAEO;AACLK,QAAIa,IAAJ,CAAS,wBAAT;AACD;AACF,CAXD;;AAaA,IAAIC,SAAS7B,IAAI8B,MAAJ,CAAW,IAAX,EAAiB,YAAK;AACjCd,UAAQC,GAAR,CAAY,oBAAZ,EAAkCO,QAAQC,GAAR,CAAYC,QAA9C;AACD,CAFY,CAAb","file":"index.js","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport bodyParser from 'body-parser'\n\nimport userRouter from './routes/user'\nimport authRouter from './routes/auth'\n\nlet app = express()\n\napp.use(bodyParser.urlencoded({extended: true}))\napp.use(bodyParser.json())\n\napp.use('/static', express.static(path.join(__dirname, '../client/build/static')))\n\napp.use('/img', express.static(path.join(__dirname, '../client/build/img')))\n\n//app.use('/auth', authRouter)\napp.use('/user', userRouter)\napp.use('/auth', authRouter)\n\napp.get('/', (req,res) => {\n  console.log(req.headers)\n  const language = req.get('accept-language').split(',')[0]\n  const lan = language.match(/^(es)/) ? 'es' : 'en'\n  const mobile = req.get('user-agent').match((/(Mobile)/g)) ? true : false\n  //res.send(`Hi, there, from Express! ${lan}, ${((mobile) ? 'mobile' : 'pc')}`)\n  if(process.env.NODE_ENV === 'production') {\n    res.sendFile(path.join(__dirname, '../client/build/index.html'))\n  } else {\n    res.send('This is not a Web Page')\n  }\n})\n\nlet server = app.listen(8080, ()=> {\n  console.log('Server runnning!: ', process.env.NODE_ENV)\n})\n"]}