{"version":3,"sources":["../server/index.js"],"names":["dotenv","config","silent","app","PORT","process","env","ENV","NODE_ENV","use","bodyParser","urlencoded","extended","json","express","static","path","join","__dirname","userRouter","authRouter","listRouter","gsqlRouter","get","req","res","language","split","lan","match","mobile","sendFile","send","server","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,iBAAOC,MAAP,CAAc,EAAEC,QAAQ,IAAV,EAAd;;AAEA,IAAIC,MAAM,wBAAV;AACA,IAAIC,OAAOC,QAAQC,GAAR,CAAYF,IAAvB;AACA,IAAIG,MAAMF,QAAQC,GAAR,CAAYE,QAAZ,IAAwB,aAAlC;AACAL,IAAIM,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAACC,UAAU,IAAX,EAAtB,CAAR;AACAT,IAAIM,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEAV,IAAIM,GAAJ,CAAQ,SAAR,EAAmBK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CAAf,CAAnB;;AAEAf,IAAIM,GAAJ,CAAQ,MAAR,EAAgBK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAf,CAAhB;;AAEA;AACAf,IAAIM,GAAJ,CAAQ,OAAR,EAAiBU,cAAjB;AACAhB,IAAIM,GAAJ,CAAQ,OAAR,EAAiBW,cAAjB;AACAjB,IAAIM,GAAJ,CAAQ,OAAR,EAAiBY,eAAjB;AACAlB,IAAIM,GAAJ,CAAQ,OAAR,EAAiBa,oBAAjB;;AAEAnB,IAAIoB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAKC,GAAL,EAAa;AACxB;AACA,MAAMC,WAAWF,IAAID,GAAJ,CAAQ,iBAAR,EAA2BI,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAjB;AACA,MAAMC,MAAMF,SAASG,KAAT,CAAe,OAAf,IAA0B,IAA1B,GAAiC,IAA7C;AACA,MAAMC,SAASN,IAAID,GAAJ,CAAQ,YAAR,EAAsBM,KAAtB,CAA6B,WAA7B,IAA6C,IAA7C,GAAoD,KAAnE;AACA;AACA,MAAGtB,QAAQ,YAAX,EAAyB;AACvBkB,QAAIM,QAAJ,CAAaf,eAAKC,IAAL,CAAUC,SAAV,EAAqB,4BAArB,CAAb;AACD,GAFD,MAEO;AACLO,QAAIO,IAAJ,CAAS,wBAAT;AACD;AACF,CAXD;;AAaA,IAAIC,SAAS9B,IAAI+B,MAAJ,CAAW9B,IAAX,EAAiB,YAAK;AACjC+B,UAAQC,GAAR,CAAY,oBAAZ,EAAkC7B,GAAlC,EAAuCH,IAAvC;AACD,CAFY,CAAb","file":"index.js","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport bodyParser from 'body-parser'\n\nimport userRouter from './routes/user'\nimport authRouter from './routes/auth'\nimport listRouter from './routes/lists'\nimport gsqlRouter from './routes/gsqlRouter'\nimport dotenv from 'dotenv'\n\ndotenv.config({ silent: true })\n\nlet app = express()\nlet PORT = process.env.PORT\nlet ENV = process.env.NODE_ENV || 'development'\napp.use(bodyParser.urlencoded({extended: true}))\napp.use(bodyParser.json())\n\napp.use('/static', express.static(path.join(__dirname, '../client/build/static')))\n\napp.use('/img', express.static(path.join(__dirname, '../client/build/img')))\n\n//app.use('/auth', authRouter)\napp.use('/user', userRouter)\napp.use('/auth', authRouter)\napp.use('/list', listRouter)\napp.use('/gsql', gsqlRouter)\n\napp.get('/', (req,res) => {\n  //console.log(req.headers)\n  const language = req.get('accept-language').split(',')[0]\n  const lan = language.match(/^(es)/) ? 'es' : 'en'\n  const mobile = req.get('user-agent').match((/(Mobile)/g)) ? true : false\n  //res.send(`Hi, there, from Express! ${lan}, ${((mobile) ? 'mobile' : 'pc')}`)\n  if(ENV === 'production') {\n    res.sendFile(path.join(__dirname, '../client/build/index.html'))\n  } else {\n    res.send('This is not a Web Page')\n  }\n})\n\nlet server = app.listen(PORT, ()=> {\n  console.log('Server runnning!: ', ENV, PORT)\n})\n"]}