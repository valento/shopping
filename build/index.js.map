{"version":3,"sources":["../server/index.js"],"names":["dotenv","config","silent","app","PORT","process","env","ENV","NODE_ENV","use","bodyParser","urlencoded","extended","json","express","static","path","join","__dirname","userRouter","authRouter","listRouter","gamesRouter","gsqlRouter","repRouter","galleryRouter","get","languages","req","res","next","lng","language","mobile","match","status","sendFile","send","server","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,iBAAOC,MAAP,CAAc,EAAEC,QAAQ,IAAV,EAAd;;AAEA,IAAIC,MAAM,wBAAV;AACA,IAAIC,OAAOC,QAAQC,GAAR,CAAYF,IAAvB;AACA,IAAIG,MAAMF,QAAQC,GAAR,CAAYE,QAAZ,IAAwB,aAAlC;AACAL,IAAIM,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAACC,UAAU,IAAX,EAAtB,CAAR;AACAT,IAAIM,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEA;AACA;AACA;;AAEAV,IAAIM,GAAJ,CAAQ,SAAR,EAAmBK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CAAf,CAAnB;;AAEA,IAAGX,QAAQ,YAAX,EAAyB;AACvBJ,MAAIM,GAAJ,CAAQ,MAAR,EAAgBK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAhB;AACD,CAFD,MAEO;AACLf,MAAIM,GAAJ,CAAQ,MAAR,EAAgBK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAf,CAAhB;AACD;;AAED;AACAf,IAAIM,GAAJ,CAAQ,OAAR,EAAiBU,cAAjB;AACAhB,IAAIM,GAAJ,CAAQ,OAAR,EAAiBW,cAAjB;AACAjB,IAAIM,GAAJ,CAAQ,OAAR,EAAiBY,eAAjB;AACAlB,IAAIM,GAAJ,CAAQ,QAAR,EAAkBa,eAAlB;AACAnB,IAAIM,GAAJ,CAAQ,OAAR,EAAiBc,oBAAjB;AACApB,IAAIM,GAAJ,CAAQ,SAAR,EAAkBe,gBAAlB;AACArB,IAAIM,GAAJ,CAAQ,UAAR,EAAmBgB,iBAAnB;;AAEAtB,IAAIuB,GAAJ,CAAQ,KAAR,EAAe,sCAAgB,EAACC,WAAW,CAAC,IAAD,EAAM,IAAN,CAAZ,EAAhB,CAAf,EAA0D,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAC1E;AACA,MAAMC,MAAMH,IAAII,QAAhB;AACA;AACA,MAAMC,SAASL,IAAIF,GAAJ,CAAQ,YAAR,EAAsBQ,KAAtB,CAA6B,WAA7B,IAA6C,IAA7C,GAAoD,KAAnE;AACA;AACA;AACAL,MAAIM,MAAJ,CAAW,GAAX,EAAgBtB,IAAhB,CAAqB,EAACmB,UAAUD,GAAX,EAAgBE,QAAQA,MAAxB,EAArB;AACD,CARD;;AAUA9B,IAAIuB,GAAJ,CAAQ,GAAR,EAAa,UAACE,GAAD,EAAKC,GAAL,EAAa;AACxB;AACA,MAAGtB,QAAQ,YAAX,EAAyB;AACvBsB,QAAIO,QAAJ,CAAapB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,4BAArB,CAAb;AACD,GAFD,MAEO;AACLW,QAAIQ,IAAJ,CAAS,wBAAT;AACD;AACF,CAPD;;AASA,IAAIC,SAASnC,IAAIoC,MAAJ,CAAWnC,IAAX,EAAiB,YAAK;AACjCoC,UAAQC,GAAR,CAAY,oBAAZ,EAAkClC,GAAlC,EAAuCH,IAAvC;AACD,CAFY,CAAb","file":"index.js","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport bodyParser from 'body-parser'\nimport requestLanguage from 'express-request-language'\n\nimport userRouter from './routes/user'\nimport authRouter from './routes/auth'\nimport listRouter from './routes/lists'\nimport gamesRouter from './routes/games'\nimport gsqlRouter from './routes/gsqlRouter'\nimport repRouter from './routes/report'\nimport galleryRouter from './routes/gallery'\nimport dotenv from 'dotenv'\n\ndotenv.config({ silent: true })\n\nlet app = express()\nlet PORT = process.env.PORT\nlet ENV = process.env.NODE_ENV || 'development'\napp.use(bodyParser.urlencoded({extended: true}))\napp.use(bodyParser.json())\n\n//app.set('view engine','pug')\n//app.set('views', '.views')\n//app.use('/admin/static', express.static(path.join(__dirname, '../admin/build/static')))\n\napp.use('/static', express.static(path.join(__dirname, '../client/build/static')))\n\nif(ENV === 'production') {\n  app.use('/img', express.static(path.join(__dirname, '../img')))\n} else {\n  app.use('/img', express.static(path.join(__dirname, '../client/build/img')))\n}\n\n//app.use('/auth', authRouter)\napp.use('/user', userRouter)\napp.use('/auth', authRouter)\napp.use('/list', listRouter)\napp.use('/games', gamesRouter)\napp.use('/gsql', gsqlRouter)\napp.use('/report',repRouter)\napp.use('/gallery',galleryRouter)\n\napp.get('/ua', requestLanguage({languages: ['en','es']}), (req,res,next) => {\n  //let settings = {}\n  const lng = req.language\n  //const lan = language.match(/^(es)/) ? 'es' : 'en'\n  const mobile = req.get('user-agent').match((/(Mobile)/g)) ? true : false\n  //settings.lan = lan\n  //settings.mob = mobile\n  res.status(200).json({language: lng, mobile: mobile})\n})\n\napp.get('/', (req,res) => {\n  //res.send(`Hi, there, from Express! ${lan}, ${((mobile) ? 'mobile' : 'pc')}`)\n  if(ENV === 'production') {\n    res.sendFile(path.join(__dirname, '../client/build/index.html'))\n  } else {\n    res.send('This is not a Web Page')\n  }\n})\n\nlet server = app.listen(PORT, ()=> {\n  console.log('Server runnning!: ', ENV, PORT)\n})\n"]}