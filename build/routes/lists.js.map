{"version":3,"sources":["../../server/routes/lists.js"],"names":["listRouter","express","Router","mergeParams","db","database","get","req","res","next","params","table","domain","cat","getList","then","console","log","rows","collection","data","map","item","hasOwnProperty","parent_id","status","json","catch","errors","global","err","message"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,CAAe;AAChCC,eAAa;AADmB,CAAf,CAAnB;;AAIA,IAAMC,KAAK,IAAIC,iBAAJ,CAAa,SAAb,CAAX;;AAEAL,WAAWM,GAAX,CAAe,sBAAf,EAAuC,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,oBAC1BF,IAAIG,MADsB;AAAA,MAC/CC,KAD+C,eAC/CA,KAD+C;AAAA,MACzCC,MADyC,eACzCA,MADyC;AAAA,MAClCC,GADkC,eAClCA,GADkC;;AAEvDT,KAAGU,OAAH,CAAY,EAAEF,cAAF,EAASC,QAAT,EAAZ,EAA4BF,KAA5B,EAAmC,GAAnC,EAAwCI,IAAxC,CAA8C;AAAA,WAAQC,QAAQC,GAAR,CAAYC,IAAZ,CAAR;AAAA,GAA9C;AACD,CAHD;;AAKAlB,WAAWM,GAAX,CAAe,iBAAf,EAAkC,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,qBAC1BF,IAAIG,MADsB;AAAA,MAC5CE,MAD4C,gBAC5CA,MAD4C;AAAA,MACpCD,KADoC,gBACpCA,KADoC;;AAElDP,KAAGU,OAAH,CAAY,EAAEF,cAAF,EAAZ,EAAwBD,KAAxB,EAA+B,GAA/B,EACCI,IADD,CACO,gBAAQ;AACb,QAAMI,aAAaC,KAAKC,GAAL,CAAU,gBAAQ;AACnC,UAAIC,KAAKC,cAAL,CAAoB,WAApB,CAAJ,EAAuC;AACrC,mCAAUD,KAAKE,SAAf,EAA0BF,IAA1B;AACD,OAFD,MAEO;AACL,eAAOA,IAAP;AACD;AACF,KANkB,CAAnB;AAOAd,QAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,UAArB;AACD,GAVD,EAWCQ,KAXD,CAWQ,eAAO;AAAEnB,QAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,EAACE,QAAQ,EAACC,QAAQC,IAAIC,OAAb,EAAT,EAAtB;AAAyD,GAX1E;AAYD,CAdD;;kBAgBe/B,U","file":"lists.js","sourcesContent":["import express from 'express'\nimport database from '../api/product'\n\nconst listRouter = express.Router({\n  mergeParams: true\n})\n\nconst db = new database('aapp.db')\n\nlistRouter.get('/:table/:domain/:cat', (req,res,next) => {\n  const { table,domain,cat } = req.params\n  db.getList( { domain,cat }, table, '*').then( rows => console.log(rows))\n})\n\nlistRouter.get('/:table/:domain', (req,res,next) => {\n  let { domain, table } = req.params\n  db.getList( { domain }, table, '*')\n  .then( data => {\n    const collection = data.map( item => {\n      if( item.hasOwnProperty('parent_id') ) {\n        return { [item.parent_id]:item }\n      } else {\n        return item\n      }\n    })\n    res.status(200).json(collection)\n  })\n  .catch( err => { res.status(500).json( {errors: {global: err.message}} ) })\n})\n\nexport default listRouter\n"]}