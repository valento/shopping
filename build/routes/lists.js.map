{"version":3,"sources":["../../server/routes/lists.js"],"names":["listRouter","express","Router","mergeParams","use","bodyParser","json","route","get","getAuth","req","res","next","mann_id","params","api","mann","getListResources","then","status","results","catch","errors","global","err","message","kay","table","scope","getList","gender","length","Error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,CAAe;AAChCC,eAAa;AADmB,CAAf,CAAnB;AAGAH,WAAWI,GAAX,CAAeC,qBAAWC,IAAX,EAAf;;AAEA;AACA;AACA;AACA;;AAEAN,WAAWO,KAAX,CAAiB,0BAAjB,EACCC,GADD,CACKC,aADL,EACc,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,MACtBC,OADsB,GACVH,IAAII,MADM,CACtBD,OADsB;;AAE9BE,iBAAIC,IAAJ,CAASC,gBAAT,CAA0B,EAACJ,gBAAD,EAA1B,EAAoC,WAApC,EACCK,IADD,CACO,mBAAW;AAChBP,QAAIQ,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAqBc,OAArB;AACD,GAHD,EAICC,KAJD,CAIQ,eAAO;AACbV,QAAIQ,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAsB,EAACgB,QAAQ,EAACC,QAAQC,IAAIC,OAAb,EAAT,EAAtB;AACD,GAND;AAOD,CAVD;;AAaAzB,WAAWQ,GAAX,CAAe,gBAAf,EAAiC,UAACE,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,oBAC5BF,IAAII,MADwB;AAAA,MAC3CY,GAD2C,eAC3CA,GAD2C;AAAA,MACtCC,KADsC,eACtCA,KADsC;;AAEjD,MAAMC,QAAQ,CAAC,KAAD,EAAO,UAAP,EAAkB,UAAlB,EAA6B,SAA7B,EAAuC,SAAvC,EACZ,MADY,EACL,MADK,EACE,OADF,EACU,MADV,EACiB,MADjB,EACwB,UADxB,EACmC,UADnC,EAC8C,UAD9C,EACyD,OADzD,EACiE,OADjE,EACyE,QADzE,CAAd;AAEAb,iBAAIC,IAAJ,CAASa,OAAT,CAAiB,EAACC,QAAO,CAAR,EAAjB,EAA6BH,KAA7B,EAAoCC,KAApC,EACCV,IADD,CACO,mBAAW;AAChB,QAAGE,QAAQW,MAAR,GAAiB,CAApB,EAAsB;AACpBpB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAqBc,OAArB;AACD,KAFD,MAEO;AACL,YAAM,IAAIY,KAAJ,CAAU,EAACP,SAAS,WAAV,EAAV,CAAN;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAfD,EAgBCJ,KAhBD,CAgBQ,eAAO;AAAEV,QAAIQ,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAsB,EAACgB,QAAQ,EAACC,QAAQC,IAAIC,OAAb,EAAT,EAAtB;AAAyD,GAhB1E;AAiBD,CArBD;;kBAuBezB,U","file":"lists.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\nimport api from '../api/mann'\nimport { checkAuth, getAuth } from '../middleware/auth'\nimport dotenv from 'dotenv'\n\nconst listRouter = express.Router({\n  mergeParams: true\n})\nlistRouter.use(bodyParser.json())\n\n//listRouter.get('/:table/:gender/:cat', (req,res,next) => {\n//  const { table,gender,cat } = req.params\n//  api.mann.getList( { gender,cat }, table, '*').then( rows => console.log(rows))\n//})\n\nlistRouter.route('/mann/resources/:mann_id')\n.get(getAuth, (req,res,next) => {\n  const { mann_id } = req.params\n  api.mann.getListResources({mann_id},'resources')\n  .then( results => {\n    res.status(200).json(results)\n  })\n  .catch( err => {\n    res.status(500).json( {errors: {global: err.message}})\n  })\n})\n\n\nlistRouter.get('/m/:table/:kay', (req,res,next) => {\n  let { kay, table } = req.params\n  const scope = ['uid','title_en','title_es','dscr_en','dscr_es',\n    'head','corp','waist','legs','feet','c_status','img_base','img_tumb','price','likes','rating']\n  api.mann.getList({gender:2}, table, scope)\n  .then( results => {\n    if(results.length > 0){\n      res.status(200).json(results)\n    } else {\n      throw new Error({message: 'User lost'})\n    }\n    //const collection = data.map( item => {\n    //  if( item.hasOwnProperty('parent_id') ) {\n    //    return { [item.parent_id]:item }\n    //  } else {\n    //    return item\n    //  }\n    //})\n    //res.status(200).json(collection)\n  })\n  .catch( err => { res.status(500).json( {errors: {global: err.message}} ) })\n})\n\nexport default listRouter\n"]}