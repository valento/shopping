{"version":3,"sources":["../../server/routes/lists.js"],"names":["listRouter","express","Router","mergeParams","use","bodyParser","json","get","req","res","next","params","gender","table","scope","api","mann","getList","then","results","length","status","Error","message","catch","errors","global","err"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,CAAe;AAChCC,eAAa;AADmB,CAAf,CAAnB;AAGAH,WAAWI,GAAX,CAAeC,qBAAWC,IAAX,EAAf;;AAEA;AACA;AACA;AACA;;AAEAN,WAAWO,GAAX,CAAe,mBAAf,EAAoC,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,oBAC5BF,IAAIG,MADwB;AAAA,MAC9CC,MAD8C,eAC9CA,MAD8C;AAAA,MACtCC,KADsC,eACtCA,KADsC;;AAEpD,MAAMC,QAAQ,CAAC,KAAD,EAAO,UAAP,EAAkB,UAAlB,EAA6B,SAA7B,EAAuC,SAAvC,EACZ,MADY,EACL,MADK,EACE,OADF,EACU,MADV,EACiB,MADjB,EACwB,UADxB,EACmC,UADnC,EAC8C,UAD9C,EACyD,OADzD,EACiE,OADjE,EACyE,QADzE,CAAd;AAEAC,iBAAIC,IAAJ,CAASC,OAAT,CAAiB,EAACL,QAAO,CAAR,EAAjB,EAA6BC,KAA7B,EAAoCC,KAApC,EACCI,IADD,CACO,mBAAW;AAChB,QAAGC,QAAQC,MAAR,GAAiB,CAApB,EAAsB;AACpBX,UAAIY,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqBa,OAArB;AACD,KAFD,MAEO;AACL,YAAM,IAAIG,KAAJ,CAAU,EAACC,SAAS,WAAV,EAAV,CAAN;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAfD,EAgBCC,KAhBD,CAgBQ,eAAO;AAAEf,QAAIY,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAsB,EAACmB,QAAQ,EAACC,QAAQC,IAAIJ,OAAb,EAAT,EAAtB;AAAyD,GAhB1E;AAiBD,CArBD;;kBAuBevB,U","file":"lists.js","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\nimport api from '../api/mann'\nimport dotenv from 'dotenv'\n\nconst listRouter = express.Router({\n  mergeParams: true\n})\nlistRouter.use(bodyParser.json())\n\n//listRouter.get('/:table/:gender/:cat', (req,res,next) => {\n//  const { table,gender,cat } = req.params\n//  api.mann.getList( { gender,cat }, table, '*').then( rows => console.log(rows))\n//})\n\nlistRouter.get('/m/:table/:gender', (req,res,next) => {\n  let { gender, table } = req.params\n  const scope = ['uid','title_en','title_es','dscr_en','dscr_es',\n    'head','corp','waist','legs','feet','c_status','img_base','img_tumb','price','likes','rating']\n  api.mann.getList({gender:2}, table, scope)\n  .then( results => {\n    if(results.length > 0){\n      res.status(200).json(results)\n    } else {\n      throw new Error({message: 'User lost'})\n    }\n    //const collection = data.map( item => {\n    //  if( item.hasOwnProperty('parent_id') ) {\n    //    return { [item.parent_id]:item }\n    //  } else {\n    //    return item\n    //  }\n    //})\n    //res.status(200).json(collection)\n  })\n  .catch( err => { res.status(500).json( {errors: {global: err.message}} ) })\n})\n\nexport default listRouter\n"]}