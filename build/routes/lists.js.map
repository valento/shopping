{"version":3,"sources":["../../server/routes/lists.js"],"names":["listRouter","express","Router","mergeParams","db","database","get","req","res","next","params","table","g","cat","console","log","getList","then","rows","collection","data","map","item","index","hasOwnProperty","parent_id","status","json"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,CAAe;AAChCC,eAAa;AADmB,CAAf,CAAnB;;AAIA,IAAMC,KAAK,IAAIC,iBAAJ,CAAa,SAAb,CAAX;;AAEAL,WAAWM,GAAX,CAAe,iBAAf,EAAkC,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,oBAC5BF,IAAIG,MADwB;AAAA,MAC3CC,KAD2C,eAC3CA,KAD2C;AAAA,MACrCC,CADqC,eACrCA,CADqC;AAAA,MACnCC,GADmC,eACnCA,GADmC;;AAElDC,UAAQC,GAAR,CAAYF,GAAZ,EAAiB,EAACD,IAAD,EAAjB;AACAR,KAAGY,OAAH,CAAW,EAACJ,IAAD,EAAGC,QAAH,EAAX,EAAoBF,KAApB,EAA2B,GAA3B,EAAgCM,IAAhC,CAAsC;AAAA,WAAQH,QAAQC,GAAR,CAAYG,IAAZ,CAAR;AAAA,GAAtC;AACD,CAJD;;AAMAlB,WAAWM,GAAX,CAAe,YAAf,EAA6B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,qBAC5BF,IAAIG,MADwB;AAAA,MACxCE,CADwC,gBACxCA,CADwC;AAAA,MACrCD,KADqC,gBACrCA,KADqC;;AAE7CP,KAAGY,OAAH,CAAW,EAACJ,IAAD,EAAX,EAAgBD,KAAhB,EAAuB,GAAvB,EAA4BM,IAA5B,CAAkC,gBAAQ;AACxC;AACA,QAAME,aAAaC,KAAKC,GAAL,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5C,UAAGD,KAAKE,cAAL,CAAoB,WAApB,CAAH,EAAqC;AACnC,mCAASF,KAAKG,SAAd,EAAyBH,IAAzB;AACD,OAFD,MAEO;AACL,eAAOA,IAAP;AACD;AACF,KANkB,CAAnB;AAOAd,QAAIkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,UAArB;AACD,GAVD;AAWD,CAbD;;kBAeenB,U","file":"lists.js","sourcesContent":["import express from 'express'\nimport database from '../api/product'\n\nconst listRouter = express.Router({\n  mergeParams: true\n})\n\nconst db = new database('aapp.db')\n\nlistRouter.get('/:table/:g/:cat', (req,res,next) => {\n  const {table,g,cat} = req.params\n  console.log(cat, {g})\n  db.getList({g,cat}, table, '*').then( rows => console.log(rows))\n})\n\nlistRouter.get('/:table/:g', (req,res,next) => {\n  let {g, table} = req.params\n  db.getList({g}, table, '*').then( data => {\n    //console.log('List Router recieves: ', data)\n    const collection = data.map( (item, index) => {\n      if(item.hasOwnProperty('parent_id')) {\n        return {[item.parent_id]:item}\n      } else {\n        return item\n      }\n    })\n    res.status(200).json(collection)\n  })\n})\n\nexport default listRouter\n"]}