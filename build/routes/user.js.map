{"version":3,"sources":["../../server/routes/user.js"],"names":["userRouter","express","Router","mergeParams","db","database","get","getUserId","req","res","next","email","scope","getUser","then","status","json","user","catch","send","errors","global","err","message","post","checkAuth","body","saveUser"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,CAAe;AAChCC,eAAa;AADmB,CAAf,CAAnB;AAGA;AACA,IAAMC,KAAK,IAAIC,cAAJ,CAAa,WAAb,CAAX;;AAEAL,WAAWM,GAAX,CAAe,OAAf,EAAuBC,eAAvB,EAAkC,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,MAC1CC,KAD0C,GAChCH,GADgC,CAC1CG,KAD0C;;AAElD,MAAMC,QAAQ,CAAC,OAAD,EAAS,UAAT,EAAoB,QAApB,EAA6B,QAA7B,EAAsC,QAAtC,EAA+C,UAA/C,EAA0D,UAA1D,CAAd;AACAR,KAAGS,OAAH,CAAW,EAACF,YAAD,EAAX,EAAoBC,KAApB,EACCE,IADD,CACO,gBAAQ;AACbL,QAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,MAAMA,IAAP,EAArB;AACD,GAHD,EAICC,KAJD,CAIO,eAAO;AACZT,QAAIU,IAAJ,CAAS,GAAT,EAAcH,IAAd,CAAmB,EAACI,QAAQ,EAACC,QAAQC,IAAIC,OAAb,EAAT,EAAnB;AACD,GAND;AAOD,CAVD;;AAYAvB,WAAWwB,IAAX,CAAgB,QAAhB,EAA0BC,eAA1B,EAAqC,UAACjB,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,uBAC1BF,IAAIkB,IAAJ,CAAST,IADiB;AAAA,MAC7CN,KAD6C,kBAC7CA,KAD6C;AAAA,MACnCM,IADmC;AAErD;;;AACAb,KAAGuB,QAAH,CAAYV,IAAZ,EAAkBN,KAAlB,EACCG,IADD,CACO,eAAO;AACZ,QAAIQ,GAAJ,EAAS;AACPb,UAAIU,IAAJ,CAAS,GAAT,EAAcH,IAAd,CAAmB,EAACI,QAAQ,EAACC,QAAQC,IAAIC,OAAb,EAAT,EAAnB;AACD,KAFD,MAEO;AACLd,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACO,SAAS,YAAV,EAArB;AACD;AACF,GAPD,EAQCL,KARD,CAQO,eAAO;AACZ;AACD,GAVD;AAWD,CAdD;;kBAgBelB,U","file":"user.js","sourcesContent":["import express from 'express'\nimport database from '../api/user'\nimport { checkAuth, getUserId } from '../middleware/auth'\n\nconst userRouter = express.Router({\n  mergeParams: true\n})\n//userRouter.use()\nconst db = new database('./aapp.db')\n\nuserRouter.get('/data',getUserId, (req,res,next) => {\n  const { email } = req\n  const scope = ['email','username','credit','gender','rating','language','verified']\n  db.getUser({email}, scope)\n  .then( user => {\n    res.status(200).json({user: user})\n  })\n  .catch(err => {\n    res.send(500).json({errors: {global: err.message}})\n  })\n})\n\nuserRouter.post('/data/', checkAuth, (req,res,next) => {\n  const { email, ...user } = req.body.user\n  //console.log(user)\n  db.saveUser(user, email)\n  .then( err => {\n    if (err) {\n      res.send(500).json({errors: {global: err.message}})\n    } else {\n      res.status(200).json({message: 'Data saved'})\n    }\n  })\n  .catch(err => {\n    //\n  })\n})\n\nexport default userRouter\n"]}