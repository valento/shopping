{"version":3,"sources":["../../server/routes/user.js"],"names":["userRouter","express","Router","mergeParams","dotenv","config","silent","db","database","process","env","DB","route","get","getUserId","req","res","next","email","scope","listAll","then","status","json","users","catch","errors","global","err","message","findOne","user","post","checkAuth","body","rest","saveUser"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,CAAe;AAChCC,eAAa;AADmB,CAAf,CAAnB;AAGA;AACAC,iBAAOC,MAAP,CAAc,EAAEC,QAAQ,IAAV,EAAd;AACA,IAAMC,KAAK,IAAIC,cAAJ,CAAaC,QAAQC,GAAR,CAAYC,EAAzB,CAAX;;AAEA;AACAX,WAAWY,KAAX,CAAiB,GAAjB,EACCC,GADD,CACKC,eADL,EACgB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,MACxBC,KADwB,GACdH,GADc,CACxBG,KADwB;;AAEhC,MAAMC,QAAQ,CAAC,OAAD,EAAS,UAAT,EAAoB,QAApB,EAA6B,QAA7B,EAAsC,QAAtC,EAA+C,UAA/C,EAA0D,UAA1D,CAAd;;AAEA,MAAGD,UAAU,gBAAb,EAA8B;AAC5BX,OAAGa,OAAH,CAAW,OAAX,EACCC,IADD,CACO,iBAAS;AACdL,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAOA,KAAR,EAArB;AACD,KAHD,EAICC,KAJD,CAIO,eAAO;AACZT,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACG,QAAQ,EAACC,QAAQC,IAAIC,OAAb,EAAT,EAArB;AACD,KAND;AAOD;AAEF,CAfD;;AAiBA7B,WAAWY,KAAX,CAAiB,OAAjB,EACCC,GADD,CACKC,eADL,EACgB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAAA,MACxBC,KADwB,GACdH,GADc,CACxBG,KADwB;;AAEhC,MAAMC,QAAQ,CAAC,OAAD,EAAS,UAAT,EAAoB,QAApB,EAA6B,QAA7B,EAAsC,QAAtC,EAA+C,UAA/C,EAA0D,UAA1D,CAAd;AACAZ,KAAGuB,OAAH,CAAW,EAACZ,YAAD,EAAX,EAAoB,OAApB,EAA6BC,KAA7B,EACCE,IADD,CACO,gBAAQ;AACbL,QAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACQ,MAAMA,IAAP,EAArB;AACD,GAHD,EAICN,KAJD,CAIO,eAAO;AACZT,QAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACG,QAAQ,EAACC,QAAQC,IAAIC,OAAb,EAAT,EAArB;AACD,GAND;AAOD,CAXD,EAYCG,IAZD,CAYMC,eAZN,EAYgB,UAAClB,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AAChC;AADgC,MAExBc,IAFwB,GAEfhB,IAAImB,IAFW,CAExBH,IAFwB;;AAAA,MAGxBb,KAHwB,GAGNa,IAHM,CAGxBb,KAHwB;AAAA,MAGdiB,IAHc,4BAGNJ,IAHM;;AAIhCxB,KAAG6B,QAAH,CAAYD,IAAZ,EAAkBjB,KAAlB,EACCG,IADD,CACO,eAAO;AACZ,QAAIO,GAAJ,EAAS;AACPZ,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACG,QAAQ,EAACC,QAAQC,IAAIC,OAAb,EAAT,EAArB;AACD,KAFD,MAEO;AACLb,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACM,SAAS,YAAV,EAArB;AACD;AACF,GAPD,EAQCJ,KARD,CAQO,eAAO;AACZ;AACD,GAVD;AAWD,CA3BD;;kBA6BezB,U","file":"user.js","sourcesContent":["import express from 'express'\nimport database from '../api/user'\nimport { checkAuth, getUserId } from '../middleware/auth'\nimport dotenv from 'dotenv'\n\nconst userRouter = express.Router({\n  mergeParams: true\n})\n//userRouter.use()\ndotenv.config({ silent: true })\nconst db = new database(process.env.DB)\n\n//userRouter.all('/data',checkAuth)\nuserRouter.route('/')\n.get(getUserId, (req,res,next) => {\n  const { email } = req\n  const scope = ['email','username','credit','gender','rating','language','verified']\n\n  if(email === 'vale@gmail.com'){\n    db.listAll('users')\n    .then( users => {\n      res.status(200).json({users: users})\n    })\n    .catch(err => {\n      res.status(500).json({errors: {global: err.message}})\n    })\n  }\n\n})\n\nuserRouter.route('/data')\n.get(getUserId, (req,res,next) => {\n  const { email } = req\n  const scope = ['email','username','credit','gender','rating','language','verified']\n  db.findOne({email}, 'users', scope)\n  .then( user => {\n    res.status(200).json({user: user})\n  })\n  .catch(err => {\n    res.status(500).json({errors: {global: err.message}})\n  })\n})\n.post(checkAuth,(req,res,next) => {\n  //const { email } = req.user\n  const { user } = req.body\n  const { email, ...rest} = user\n  db.saveUser(rest, email)\n  .then( err => {\n    if (err) {\n      res.status(500).json({errors: {global: err.message}})\n    } else {\n      res.status(200).json({message: 'Data saved'})\n    }\n  })\n  .catch(err => {\n    //\n  })\n})\n\nexport default userRouter\n"]}