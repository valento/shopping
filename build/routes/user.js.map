{"version":3,"sources":["../../server/routes/user.js"],"names":["userRouter","express","Router","mergeParams","dotenv","config","silent","route","get","getUserId","req","res","next","email","scope","api","user","getOne","then","results","length","Object","assign","status","json","Error","message","data","lastlog","catch","console","log","err","errors","global","post","checkAuth","body","save"],"mappings":"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","file":"user.js","sourcesContent":["import express from 'express'\nimport { checkAuth, getUserId } from '../middleware/auth'\nimport dotenv from 'dotenv'\nimport api from '../api/user'\n\nconst userRouter = express.Router({\n  mergeParams: true\n})\n\ndotenv.config({ silent: true })\n\nuserRouter.route('/')\n.get(getUserId, (req,res,next) => {\n  const { email } = req\n  const scope = ['email','username','credit','gender','rating','language','verified']\n\n  //if(email === 'vale@gmail.com'){\n  //  db.listAll('users')\n  //  .then( users => {\n  //    res.status(200).json({users: users})\n  //  })\n  //  .catch(err => {\n  //    res.status(500).json({errors: {global: err.message}})\n  //  })\n  //}\n\n})\n\nuserRouter.route('/data')\n.get(getUserId, (req,res,next) => {\n  const { email } = req\n  const scope = ['uid','email','gender','username','verified','credit','rating','language','c_status']\n  api.user.getOne({email}, 'users', scope)\n  .then( results => {\n    if(results.length > 0){\n      const user = Object.assign({}, results[0])\n      res.status(200).json({user})\n    } else {\n      throw new Error({message: 'User lost'})\n    }\n  })\n  .then( () => {\n    let data = {email: email}\n    api.user.lastlog(email)\n    .catch(err => {\n      console.log(err)\n    })\n  })\n  .catch(err => {\n    res.status(500).json({errors: {global: err.message}})\n  })\n})\n.post(checkAuth,(req,res,next) => {\n  let { user } = req.body\n  const { email, ...data} = user\n  api.user.save({data}, email)\n  .then( err => {\n    if (err) {\n      res.status(500).json({errors: {global: err.message}})\n    } else {\n      res.status(200).json({message: 'Data saved'})\n    }\n  })\n  //.then( ({email}) => {\n  //  api.user.getOne({email},'users',scope)\n  //})\n  //.then( results => {\n  //  if(results.length > 0){\n  //    user = results[0]\n  //    res.status(200).json({user})\n  //  }\n  //})\n  .catch(err => {\n    console.log(err.message)\n  })\n})\n\nexport default userRouter\n"]}