{"version":3,"sources":["../../server/routes/gsqlRouter.js"],"names":["config","require","console","log","get","options","user","password","database","socketPath","db","mysql","createConnection","gsqlRouter","express","Router","mergeParams","route","req","res","next","query","err","results","json"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,QAAQ,cAAR,CAAf;AACAC,QAAQC,GAAR,CAAYH,OAAOI,GAAP,CAAW,YAAX,CAAZ;;AAEA,IAAMC,UAAU;AACdC,QAAMN,OAAOI,GAAP,CAAW,YAAX,CADQ;AAEdG,YAAUP,OAAOI,GAAP,CAAW,gBAAX,CAFI;AAGdI,YAAU;AAHI,CAAhB;;AAMA,IACER,OAAOI,GAAP,CAAW,0BAAX,KACAJ,OAAOI,GAAP,CAAW,UAAX,MAA2B,YAF7B,EAGE;AACAC,UAAQI,UAAR,kBAAkCT,OAAOI,GAAP,CAAW,0BAAX,CAAlC;AACD;;AAEDF,QAAQC,GAAR,CAAYE,OAAZ;;AAEA,IAAMK,KAAKC,gBAAMC,gBAAN,CAAuBP,OAAvB,CAAX;AACAH,QAAQC,GAAR,CAAYO,EAAZ;;AAEA,IAAMG,aAAaC,kBAAQC,MAAR,CAAe;AAChCC,eAAa;AADmB,CAAf,CAAnB;;AAIAH,WAAWI,KAAX,CAAiB,GAAjB,EACCb,GADD,CACM,UAACc,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACtBV,KAAGW,KAAH,CACE,uBADF,EAEE,UAAEC,GAAF,EAAMC,OAAN,EAAmB;AACjB,QAAID,GAAJ,EAAU;AACRpB,cAAQC,GAAR,CAAYmB,GAAZ;AACA;AACD;AACDH,QAAIK,IAAJ,CAASD,OAAT;AACD,GARH;AAUD,CAZD;;kBAceV,U","file":"gsqlRouter.js","sourcesContent":["import express from 'express'\nimport mysql from 'mysql'\n\nconst config = require('../../config')\nconsole.log(config.get('MYSQL_USER'))\n\nconst options = {\n  user: config.get('MYSQL_USER'),\n  password: config.get('MYSQL_PASSWORD'),\n  database: 'aappdb'\n}\n\nif(\n  config.get('INSTANCE_CONNECTION_NAME') &&\n  config.get('NODE_ENV') === 'production'\n) {\n  options.socketPath = `/cloudsql/${config.get('INSTANCE_CONNECTION_NAME')}`\n}\n\nconsole.log(options)\n\nconst db = mysql.createConnection(options)\nconsole.log(db)\n\nconst gsqlRouter = express.Router({\n  mergeParams: true\n})\n\ngsqlRouter.route('/')\n.get( (req,res,next) => {\n  db.query(\n    'SELECT * FROM `users`',\n    ( err,results ) => {\n      if( err ) {\n        console.log(err)\n        return\n      }\n      res.json(results)\n    }\n  )\n})\n\nexport default gsqlRouter\n"]}