{"version":3,"sources":["../../server/api/games.js"],"names":["config","require","options","user","get","password","database","socketPath","host","db","mysql","createConnection","addSocial","mann_id","user_id","action","uid","concat","act","Object","keys","val","values","sql","console","log","Promise","resolve","reject","query","err","countSocial"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,SAASC,QAAQ,cAAR,CAAf;;AAEA,IAAMC,UAAU;AACdC,QAAMH,OAAOI,GAAP,CAAW,YAAX,CADQ;AAEdC,YAAUL,OAAOI,GAAP,CAAW,gBAAX,CAFI;AAGdE,YAAU;AAHI,CAAhB;;AAMA,IAAIN,OAAOI,GAAP,CAAW,0BAAX,KAA0CJ,OAAOI,GAAP,CAAW,UAAX,MAA2B,YAAzE,EAAwF;AACtFF,UAAQK,UAAR,kBAAkCP,OAAOI,GAAP,CAAW,0BAAX,CAAlC;AACD,CAFD,MAEO;AACLF,UAAQM,IAAR,GAAe,WAAf;AACAN,UAAQI,QAAR,GAAmB,QAAnB;AACD;;AAED,IAAMG,KAAKC,gBAAMC,gBAAN,CAAuBT,OAAvB,CAAX;;kBAEe;AACbU,aAAW,mBAACC,OAAD,EAAUC,OAAV,EAAmBC,MAAnB,EAA8B;AACvC,QAAMC,MAAMH,QAAQI,MAAR,CAAe,GAAf,EAAmBH,OAAnB,CAAZ;AACA,QAAMI,MAAMC,OAAOC,IAAP,CAAYL,MAAZ,EAAoB,CAApB,CAAZ;AACA,QAAMM,MAAMF,OAAOG,MAAP,CAAcP,MAAd,EAAsB,CAAtB,CAAZ;AACA,QAAMQ,wDAAsDL,GAAtD,mBAAsEF,GAAtE,WAA8EH,OAA9E,SAAyFC,OAAzF,SAAoGO,GAApG,kCAAoIH,GAApI,SAA2IG,GAAjJ;AACAG,YAAQC,GAAR,CAAYF,GAAZ;AACA,WAAO,IAAIG,OAAJ,CAAa,UAACC,OAAD,EAASC,MAAT,EAAoB;AACtCnB,SAAGoB,KAAH,CAASN,GAAT,GAAeV,SAAQC,OAAR,EAAgBO,GAA/B,GAAqC,eAAO;AAC1C,YAAGS,GAAH,EAAQ,OAAOF,OAAOE,GAAP,CAAP;AACRH;AACD,OAHD;AAID,KALM,CAAP;AAMD,GAbY;AAcbI,eAAa,qBAAClB,OAAD,EAAUE,MAAV,EAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAxBY,C","file":"games.js","sourcesContent":["import mysql from 'mysql'\n\nconst config = require('../../config')\n\nconst options = {\n  user: config.get('MYSQL_USER'),\n  password: config.get('MYSQL_PASSWORD'),\n  database: 'aappdb'\n}\n\nif( config.get('INSTANCE_CONNECTION_NAME') && config.get('NODE_ENV') === 'production' ) {\n  options.socketPath = `/cloudsql/${config.get('INSTANCE_CONNECTION_NAME')}`\n} else {\n  options.host = 'localhost'\n  options.database = 'aappdb'\n}\n\nconst db = mysql.createConnection(options)\n\nexport default {\n  addSocial: (mann_id, user_id, action) => {\n    const uid = mann_id.concat('_',user_id)\n    const act = Object.keys(action)[0]\n    const val = Object.values(action)[0]\n    const sql = `INSERT INTO mann_actions(uid,mann_id,user_id,${act}) VALUES('${uid}',${mann_id},${user_id},${val}) ON DUPLICATE KEY UPDATE ${act}=${val}`\n    console.log(sql)\n    return new Promise( (resolve,reject) => {\n      db.query(sql, (mann_id,user_id,val), err => {\n        if(err) return reject(err)\n        resolve()\n      })\n    } )\n  },\n  countSocial: (mann_id, action) => {\n    //const act = Object.keys(action)[0]\n    //const sql = `SELECT COUNT(${act}) FROM mann_actions WHERE mann_id=${mann_id}`\n    //console.log(sql)\n    //return new Promise( (resolve,reject) => {\n    //  db.query(sql, ( err,results ) => {\n    //    if(err) return reject(err)\n    //    resolve(results)\n    //  })\n    //} )\n  }\n}\n"]}